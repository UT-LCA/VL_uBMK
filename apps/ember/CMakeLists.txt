project(VL_uBMK)

cmake_minimum_required(VERSION 3.1)

include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})

if(VL_FOUND)
  include_directories(${VL_INCLUDE_DIR})
endif()

if(ZMQ_STATIC_FOUND OR ZMQ_DYNAMIC_FOUND)
  add_microbenchmark(sweep2d_zmq ember.cpp)
  target_compile_definitions(sweep2d_zmq PRIVATE -DZMQ -DEMBER_SWEEP2D)
  target_include_directories(sweep2d_zmq PRIVATE ${ZMQ_INCLUDE_DIR})
  target_link_libraries(sweep2d_zmq ${ZMQ_LIBRARY})
  if (ZMQ_STATIC_FOUND)
    target_compile_options(sweep2d_zmq PRIVATE -static -pthread)
  endif()
  add_microbenchmark(halo2d_zmq ember.cpp)
  target_compile_definitions(halo2d_zmq PRIVATE -DZMQ -DEMBER_HALO2D)
  target_include_directories(halo2d_zmq PRIVATE ${ZMQ_INCLUDE_DIR})
  target_link_libraries(halo2d_zmq ${ZMQ_LIBRARY})
  if (ZMQ_STATIC_FOUND)
    target_compile_options(halo2d_zmq PRIVATE -static -pthread)
  endif()
  add_microbenchmark(incast_zmq ember.cpp)
  target_compile_definitions(incast_zmq PRIVATE -DZMQ -DEMBER_INCAST)
  target_include_directories(incast_zmq PRIVATE ${ZMQ_INCLUDE_DIR})
  target_link_libraries(incast_zmq ${ZMQ_LIBRARY})
  if (ZMQ_STATIC_FOUND)
    target_compile_options(incast_zmq PRIVATE -static -pthread)
  endif()
elseif(NOT (ZMQ_STATIC_FOUND OR ZMQ_DYNAMIC_FOUND))
  MESSAGE(STATUS "WARNING: No zmq library, skip sweep2d_zmq, halo2d_zmq, incast_zmq.")
endif()

if(NOT Boost_LOCKFREE_QUEUE_HPP)
  MESSAGE(STATUS "WARNING: No boost/lockfree/queue.hpp, skip sweep2d_boost, halo2d_boost, incast_vl.")
else()
  add_microbenchmark(sweep2d_boost ember.cpp)
  target_link_libraries(sweep2d_boost ${Boost_LIBRARIES})
  target_compile_definitions(sweep2d_boost PRIVATE -DBOOST -DEMBER_SWEEP2D)
  add_microbenchmark(halo2d_boost ember.cpp)
  target_link_libraries(halo2d_boost ${Boost_LIBRARIES})
  target_compile_definitions(halo2d_boost PRIVATE -DBOOST -DEMBER_HALO2D)
  add_microbenchmark(incast_boost ember.cpp)
  target_link_libraries(incast_boost ${Boost_LIBRARIES})
  target_compile_definitions(incast_boost PRIVATE -DBOOST -DEMBER_INCAST)
endif()

if(NOT VL_FOUND)
  MESSAGE(STATUS "WARNING: No libvl found, skip sweep2d_vl, halo2d_vl, incast_vl.")
else()
  add_microbenchmark(sweep2d_vl ember.cpp)
  target_compile_definitions(sweep2d_vl PRIVATE -DVL -DEMBER_SWEEP2D)
  target_link_libraries(sweep2d_vl ${VL_LIBRARY})
  add_microbenchmark(halo2d_vl ember.cpp)
  target_compile_definitions(halo2d_vl PRIVATE -DVL -DEMBER_HALO2D)
  target_link_libraries(halo2d_vl ${VL_LIBRARY})
  add_microbenchmark(incast_vl ember.cpp)
  target_compile_definitions(incast_vl PRIVATE -DVL -DEMBER_INCAST)
  target_link_libraries(incast_vl ${VL_LIBRARY})
endif()
