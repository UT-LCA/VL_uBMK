project(VL_uBMK)

cmake_minimum_required(VERSION 3.1)

include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})

if(VL_FOUND)
  include_directories(${VL_INCLUDE_DIR})
endif()
if(CAF_FOUND)
  include_directories(${CAF_INCLUDE_DIR})
endif()

find_file(Boost_LOCKFREE_QUEUE_HPP "boost/lockfree/queue.hpp" ${Boost_INCLUDE_DIRS})

if(NOT (Boost_ATOMIC_FOUND OR GCCLIBATOMIC_FOUND))
  MESSAGE(STATUS "WARNING: No atomic library, skip pingpong.")
else()
  if(NOT Boost_LOCKFREE_QUEUE_HPP)
    MESSAGE(STATUS "WARNING: No boost/lockfree/queue.hpp, skip pingpong_boost.")
  else()
    add_microbenchmark(pingpong_boost pingpong.cpp)
    target_link_libraries(pingpong_boost ${Boost_LIBRARIES})
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_boost PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_boost atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_boost PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_boost PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT Boost_LOCKFREE_QUEUE_HPP)
  if(NOT GEM5_ROOT)
    MESSAGE(STATUS "WARNING: No gem5 found, skip pingpong_m5.")
  else()
    add_microbenchmark(pingpong_m5 pingpong.cpp)
    target_compile_definitions(pingpong_m5 PRIVATE -DM5VL)
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_m5 PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_m5 atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_m5 PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_m5 PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT GEM5_ROOT)
  if(ZMQ_STATIC_FOUND OR ZMQ_DYNAMIC_FOUND)
    add_microbenchmark(pingpong_zmq pingpong.cpp)
    target_compile_definitions(pingpong_zmq PRIVATE -DZMQ)
    target_include_directories(pingpong_zmq PRIVATE ${ZMQ_INCLUDE_DIR})
    target_link_libraries(pingpong_zmq ${ZMQ_LIBRARY})
    if (ZMQ_STATIC_FOUND)
      target_compile_options(pingpong_zmq PRIVATE -static -pthread)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_zmq PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_zmq PRIVATE -DSTDCHRONO)
    endif()
  elseif(NOT (ZMQ_STATIC_FOUND OR ZMQ_DYNAMIC_FOUND))
    MESSAGE(STATUS "WARNING: No zmq library, skip pingpong_zmq.")
  endif()
  if(NOT VL_FOUND)
    MESSAGE(STATUS "WARNING: No libvl found, skip pingpong_vl.")
  else()
    add_microbenchmark(pingpong_vl pingpong.cpp)
    target_compile_definitions(pingpong_vl PRIVATE -DVL)
    target_link_libraries(pingpong_vl ${VL_LIBRARY})
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_vl PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_vl atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_vl PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_vl PRIVATE -DSTDCHRONO)
    endif()
    add_microbenchmark(pingpong_verbose pingpong.cpp)
    target_compile_definitions(pingpong_verbose PRIVATE -DVL -DVERBOSE)
    target_link_libraries(pingpong_verbose ${VL_LIBRARY})
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_verbose atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_verbose PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT VL_FOUND)
  if(NOT CAF_FOUND)
    MESSAGE(STATUS "WARNING: No libcaf found, skip pingpong_caf.")
  else()
    add_microbenchmark(pingpong_caf pingpong.cpp)
    target_compile_definitions(pingpong_caf PRIVATE -DCAF)
    target_link_libraries(pingpong_caf ${CAF_LIBRARY})
    if(NOT Boost_ATOMIC_FOUND)
      target_compile_definitions(pingpong_caf PRIVATE -DSTDATOMIC)
      target_link_libraries(pingpong_caf atomic)
    endif()
    if(NOT Boost_THREAD_FOUND)
      # fall back to use pthread library find in the top CMakeLists.txt
      target_compile_definitions(pingpong_caf PRIVATE -DSTDTHREAD)
    endif()
    if(NOT Boost_CHRONO_FOUND)
      target_compile_definitions(pingpong_caf PRIVATE -DSTDCHRONO)
    endif()
  endif(NOT CAF_FOUND)
endif()
